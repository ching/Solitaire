package forSolitaire;//Ching Yuimport javax.swing.*;public class Pile {	// array to represent the pile of cards	private CardWithImage myCards[];			// position of top card in the pile	private int myTopCardPosition;		// array of buttons corresponding to cards	private JButton myButtons[];		// pane where pile of cards will appear	private JLayeredPane myLP; 		public Pile(JLayeredPane theLP, JButton theButtons[]) {	 	myCards = new CardWithImage[14];	 	myTopCardPosition = 0;	 	myLP = theLP;		// this code assumes that the array of 	 	// buttons has already been constructed	 	myButtons = theButtons;	} //Pile constructor		public void acceptCard(CardWithImage theCard) {		if(myTopCardPosition < 13 ) {			//there is space in the pile for another card			myTopCardPosition++;			myCards[myTopCardPosition] = theCard;			myButtons[myTopCardPosition].setIcon(theCard.getImage());			myLP.add(myButtons[myTopCardPosition],new Integer(myTopCardPosition));			myLP.repaint();		}//if	}//acceptCard method		public void removeCard() {		if(myTopCardPosition >= 0) {			//there is a card to remove			myButtons[myTopCardPosition].setIcon(null);			myLP.remove(myButtons[myTopCardPosition]);			myTopCardPosition--;			myLP.repaint();		}//if	}//removeCard method		public boolean isEmpty() {		return myTopCardPosition == 0;	} //isEmpty method					public boolean isFull() {		return myTopCardPosition == 13;	} //isFull method		public int getTopCardPosition() {		return myTopCardPosition;	}//getTopCardPosition method		public CardWithImage getTopCard() {		if (myTopCardPosition > -1 && myTopCardPosition < 14) {			return myCards[myTopCardPosition];		}//if		return null;	}//getTopCard method				}//Pile class			